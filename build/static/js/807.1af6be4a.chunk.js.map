{"version":3,"file":"static/js/807.1af6be4a.chunk.js","mappings":"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","sources":["webpack://react-temp/./src/components/Backdrop/Backdrop.module.css?d6d4","components/Backdrop/Backdrop.jsx","webpack://react-temp/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","components/Error/ErrorHandler.jsx","components/FlowControl/ControlColumn.jsx","webpack://react-temp/./src/components/Form/FieldSet.module.css?85c0","components/Form/FieldSet.jsx","webpack://react-temp/./src/components/Form/Form.module.css?89ba","webpack://react-temp/./src/components/FlowControl/ControlRow.module.css?8273","components/FlowControl/ControlRow.jsx","components/Form/Form.jsx","util/auth.js","webpack://react-temp/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://react-temp/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/Success/SuccessHandler.jsx","pages/Auth/SignIn.js","pages/Auth/SignUp.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Backdrop_backdrop__p+6Qu\"};","import React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classes from './Backdrop.module.css';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\n\r\nexport default function Backdrop(props) {\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n  const activate = errorModal.activate;\r\n\r\n  if (!props.activate) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      className={classes['backdrop']}\r\n      onClick={() => {\r\n        setErrorModal({\r\n          title: '',\r\n          message: '',\r\n          activate: false,\r\n        });\r\n      }}\r\n    />,\r\n    document.getElementById('backdrop-root')\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__MYx5b\"};","import React from 'react';\r\nimport classes from './Error.module.css';\r\n\r\nexport default function Error({ message }) {\r\n  return <p className={classes.error}>{message}</p>;\r\n}\r\n","import Modal from '../Modal/Modal';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport React, { useState, useContext, Fragment } from 'react';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\n\r\nexport default function ErrorHandler({ onCancel, onAccept }) {\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n\r\n  const activate = errorModal.activate;\r\n\r\n  return (\r\n    <Fragment>\r\n      {activate && <Backdrop activate={activate}></Backdrop>}\r\n      {activate && (\r\n        <Modal\r\n          title={errorModal.title}\r\n          onCancel={onCancel}\r\n          onAccept={onAccept}\r\n          affirmative={errorModal.affirmative}\r\n          negation={errorModal.negation}\r\n          activate={activate}\r\n        >\r\n          <p>{errorModal.message}</p>\r\n        </Modal>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import classes from './ControlColumn';\r\n\r\nexport default function ControlColumn({ children }) {\r\n  return <div className={classes['control-column']}>{children}</div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FieldSet_container__5z8zs\",\"control\":\"FieldSet_control__V3mC6\",\"drop-down\":\"FieldSet_drop-down__U1jmy\"};","import classes from './FieldSet.module.css';\r\nimport Error from '../Error/Error';\r\n\r\nexport default function FieldSet({ errors }) {\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={`${classes.control} ${classes['drop-down']}`}>\r\n        <label htmlFor=\"role\">What best describes your role?</label>\r\n        <select id=\"role\" name=\"role\">\r\n          <option value=\"project-manager\">Project Manager</option>\r\n          <option value=\"business-owner\">Small-Business Owner</option>\r\n          <option value=\"recruiter\">Recruiter</option>\r\n          <option value=\"other\">Other</option>\r\n        </select>\r\n      </div>\r\n\r\n      <fieldset>\r\n        <legend>How did you find me?</legend>\r\n        <div className={classes.control}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"google\"\r\n            name=\"acquisition\"\r\n            value=\"google\"\r\n          />\r\n          <label htmlFor=\"google\">Google</label>\r\n        </div>\r\n        <div className={classes.control}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"linkedin\"\r\n            name=\"acquisition\"\r\n            value=\"linkedin\"\r\n          />\r\n          <label htmlFor=\"google\">LinkedIn</label>\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"friend\"\r\n            name=\"acquisition\"\r\n            value=\"friend\"\r\n          />\r\n          <label htmlFor=\"friend\">Referred by friend</label>\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <input type=\"checkbox\" id=\"other\" name=\"acquisition\" value=\"other\" />\r\n          <label htmlFor=\"other\">Other</label>\r\n        </div>\r\n      </fieldset>\r\n      <div className={classes.control}>\r\n        {errors && errors.acquisitionChannel && (\r\n          <Error message={errors.acquisitionChannel}></Error>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"space_racer\":\"Form_space_racer__Og5UQ\",\"form\":\"Form_form__fMMMK\",\"welcome\":\"Form_welcome__m5BzV\",\"control\":\"Form_control__1O0LK\",\"email\":\"Form_email__UPBhZ\",\"no-margin\":\"Form_no-margin__fx5cl\",\"button\":\"Form_button__Lh+sh\",\"button-flat\":\"Form_button-flat__EU-Hd\",\"sign-in\":\"Form_sign-in__Ax1te\"};","// extracted by mini-css-extract-plugin\nexport default {\"control-row\":\"ControlRow_control-row__p-xnC\"};","import classes from './ControlRow.module.css';\r\n\r\nexport default function ControlRow({ children }) {\r\n  return <div className={classes['control-row']}>{children}</div>;\r\n}\r\n","import { useActionState, useContext, useRef } from 'react';\r\nimport { buildFormDataPayload } from '../../util/auth';\r\nimport { ThemeContext, useTheme } from '../../store/theme-context';\r\nimport { filterThemeData, parseThemeData } from '../../util/theme';\r\nimport FieldSet from './FieldSet';\r\nimport Error from '../Error/Error';\r\nimport { Input } from '../Input/Input';\r\nimport classes from './Form.module.css';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\nimport ControlRow from '../FlowControl/ControlRow';\r\nimport ControlColumn from '../FlowControl/ControlColumn';\r\n\r\nexport default function Form({ authType, onSubmit }) {\r\n  const [theme, themesCollection, toggleTheme] = useTheme();\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n\r\n  const formClass = authType.toLowerCase().replace(' ', '-');\r\n\r\n  const themeData = filterThemeData(theme, themesCollection);\r\n  let formStyles;\r\n  const inputSpecs = {\r\n    height: '2rem',\r\n    width: '100%',\r\n    fontSize: '0.8rem',\r\n  };\r\n\r\n  if (theme !== 'space_racer' && themeData) {\r\n    formStyles = parseThemeData(themeData, 'auth');\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(event.target);\r\n    // const formData = {\r\n    //   email: emailInputRef.current.value,\r\n    //   password: passwordInputRef.current.value,\r\n    //   firstName: firstNameInputRef.current?.value,\r\n    //   lastName: lastNameInputRef.current?.value,\r\n    // };\r\n\r\n    const payload = buildFormDataPayload(authType, formData);\r\n\r\n    await onSubmit(payload);\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className={`${classes[theme]} ${classes.form} ${classes[formClass]}`}\r\n    >\r\n      <h2>{authType}</h2>\r\n      {authType === 'Sign Up' && (\r\n        <p className={classes.welcome}>Welcome, let's get acquainted.</p>\r\n      )}\r\n\r\n      <Input\r\n        label=\"email\"\r\n        width={inputSpecs.width}\r\n        fontSize={inputSpecs.fontSize}\r\n        inputRef={emailInputRef}\r\n        name=\"email\"\r\n      ></Input>\r\n\r\n      <ControlRow>\r\n        <Input\r\n          label=\"password\"\r\n          height={inputSpecs.height}\r\n          width={inputSpecs.width}\r\n          fontSize={inputSpecs.fontSize}\r\n          inputRef={passwordInputRef}\r\n          name=\"password\"\r\n        ></Input>\r\n        {authType === 'Sign Up' && <Input label=\"confirm-password\"></Input>}\r\n      </ControlRow>\r\n\r\n      {authType === 'Sign Up' && (\r\n        <>\r\n          <hr />\r\n          <ControlRow>\r\n            <Input\r\n              label=\"first-name\"\r\n              height={inputSpecs.height}\r\n              width={inputSpecs.width}\r\n              fontSize={inputSpecs.fontSize}\r\n              inputRef={firstNameInputRef}\r\n              name=\"first-name\"\r\n            ></Input>\r\n            <Input\r\n              label=\"last-name\"\r\n              height={inputSpecs.height}\r\n              width={inputSpecs.width}\r\n              fontSize={inputSpecs.fontSize}\r\n              inputRef={lastNameInputRef}\r\n              name=\"last-name\"\r\n            ></Input>\r\n          </ControlRow>\r\n        </>\r\n      )}\r\n\r\n      {authType === 'Sign Up' && <FieldSet errors={formError}></FieldSet>}\r\n\r\n      <p className=\"form-actions\">\r\n        <button\r\n          type=\"reset\"\r\n          className={`${classes['button']} ${classes['button-flat']}`}\r\n        >\r\n          Reset\r\n        </button>\r\n        <button className={classes.button} name=\"submit\">\r\n          {authType}\r\n        </button>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n","export function buildFormDataPayload(authType, formData) {\r\n  const payload = {};\r\n\r\n  payload.email = formData.get('email');\r\n  payload.password = formData.get('password');\r\n  payload.confirmPassword =\r\n    authType === 'Sign Up' ? formData.get('confirm-password') : '';\r\n  payload.firstName = authType === 'Sign Up' ? formData.get('first-name') : '';\r\n  payload.lastName = authType === 'Sign Up' ? formData.get('last-name') : '';\r\n  payload.role = authType === 'Sign Up' ? formData.get('role') : '';\r\n  payload.acquisitionChannel =\r\n    authType === 'Sign Up' ? formData.getAll('acquisition') : [];\r\n\r\n  return payload;\r\n}\r\n\r\nexport function setTokenExpiryDate() {}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"space_racer\":\"Input_space_racer__E66z-\",\"control\":\"Input_control__TMUNv\",\"column\":\"Input_column__eb2ZE\"};","import React, { useContext, useState } from 'react';\r\nimport classes from './Input.module.css';\r\nimport { ThemeContext, useTheme } from '../../store/theme-context';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\nimport { filterThemeData, parseThemeData } from '../../util/theme';\r\nimport Error from '../Error/Error';\r\nimport Unit from '../FlowControl/Unit';\r\n\r\nexport const Input = ({ label, inputRef, name, ...props }) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [theme, themesCollection, toggleTheme] = useTheme();\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n  const themeData = filterThemeData(theme, themesCollection);\r\n  const styles = {};\r\n  const inputType =\r\n    label === 'email'\r\n      ? 'email'\r\n      : label === 'password' || label === 'confirm-password'\r\n      ? 'password'\r\n      : 'text';\r\n  const title = label.replace('-', ' ');\r\n\r\n  if (theme !== 'space_racer' && themeData) {\r\n    const themeStyles = parseThemeData(themeData, 'newArticle');\r\n    styles.formFieldColor = themeStyles.formFieldColor;\r\n    styles.formFieldActiveColor = themeStyles.formFieldActiveColor;\r\n    styles.formFocusBorderColor = themeStyles.formFocusBorderColor;\r\n    styles.textColor = themeStyles.formInputTextColor;\r\n  }\r\n\r\n  const inputStyle = {\r\n    backgroundColor: isFocused\r\n      ? styles.formFieldActiveColor\r\n      : styles.formFieldColor,\r\n    color: styles.textColor,\r\n    border: isFocused ? styles.formFocusBorderColor : '',\r\n    outline: 'none',\r\n    display: 'block',\r\n    height: props.height,\r\n    width: props.width,\r\n    borderRadius: '5px',\r\n    fontSize: props.fontSize,\r\n  };\r\n\r\n  const position = {\r\n    marginBottom: props.marginBottom,\r\n    marginLeft: props.marginLeft,\r\n  };\r\n\r\n  const labelStyle = {\r\n    color: props.labelColor,\r\n  };\r\n\r\n  const onFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={position}\r\n      className={`${classes.control} ${classes.column} ${classes.theme}`}\r\n    >\r\n      <label htmlFor={label}>{title}</label>\r\n      <input\r\n        style={inputStyle}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        type={inputType}\r\n        className={`${classes.input}`}\r\n        ref={inputRef}\r\n        name={name}\r\n      ></input>\r\n      {formError && formError[label] && (\r\n        <Error message={formError[label]}></Error>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextAreaInput = ({ contentRef, label, ...props }) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [theme, themesCollection, toggleTheme] = useTheme();\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n  const themeData = filterThemeData(theme, themesCollection);\r\n  const styles = {};\r\n  const inputType =\r\n    label === 'email'\r\n      ? 'email'\r\n      : label === 'password' || label === 'confirm-password'\r\n      ? 'password'\r\n      : 'text';\r\n  const title = label.replace('-', ' ');\r\n\r\n  if (theme !== 'space_racer' && themeData) {\r\n    const themeStyles = parseThemeData(themeData, 'newArticle');\r\n    styles.formFieldColor = themeStyles.formFieldColor;\r\n    styles.formFieldActiveColor = themeStyles.formFieldActiveColor;\r\n    styles.formFocusBorderColor = themeStyles.formFocusBorderColor;\r\n    styles.textColor = themeStyles.formInputTextColor;\r\n  }\r\n\r\n  const onFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  const textAreaStyle = {\r\n    backgroundColor: isFocused\r\n      ? styles.formFieldActiveColor\r\n      : styles.formFieldColor,\r\n    border: isFocused ? styles.formFocusBorderColor : '',\r\n    color: styles.textColor,\r\n    outline: 'none',\r\n    display: 'block',\r\n    minHeight: '30vh',\r\n    maxHeight: '40vh',\r\n    width: '80%',\r\n    borderRadius: '5px',\r\n    fontSize: props.fontSize,\r\n  };\r\n\r\n  const position = {\r\n    marginLeft: props.marginLeft,\r\n  };\r\n\r\n  return (\r\n    <div style={position} className={`${classes.control} ${classes.column}`}>\r\n      <label htmlFor={label}>{label}</label>\r\n      <textarea\r\n        style={textAreaStyle}\r\n        className={classes.textArea}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        ref={contentRef}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__MbsJs\",\"modal-header\":\"Modal_modal-header__jeIuV\",\"space_racer\":\"Modal_space_racer__lremJ\",\"modal-content\":\"Modal_modal-content__zMU8j\",\"modal-actions\":\"Modal_modal-actions__v6I4M\"};","import React, { useState, createPortal, useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport classes from './Modal.module.css';\r\nimport SignUp from '../../pages/Auth/SignUp';\r\nimport Button from '../Button/Button';\r\nimport { ThemeContext, useTheme } from '../../store/theme-context';\r\nimport { filterThemeData } from '../../util/theme';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\n\r\nconst Modal = (props) => {\r\n  const [theme, themesCollection, toggleTheme] = useTheme();\r\n\r\n  const themeData = filterThemeData(theme, themesCollection);\r\n\r\n  const onCancel = () => {\r\n    props.onCancel();\r\n  };\r\n\r\n  const onAccept = () => {\r\n    props.onAccept();\r\n  };\r\n\r\n  // const modalRoot = document.getElementById('modal-root');\r\n\r\n  if (!props.activate) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className={classes['modal']}>\r\n      <header className={`${classes['modal-header']} ${classes[theme]}`}>\r\n        <h1>{props.title}</h1>\r\n      </header>\r\n      <div className={classes['modal-content']}>{props.children}</div>\r\n      <div className={classes['modal-actions']}>\r\n        {props.onCancel && props.negation && (\r\n          <Button\r\n            onClick={onCancel}\r\n            className=\"cancel\"\r\n            value={props.negation}\r\n          ></Button>\r\n        )}\r\n        {props.onAccept && props.affirmative && (\r\n          <Button\r\n            onClick={onAccept}\r\n            className=\"accept\"\r\n            value={props.affirmative}\r\n          ></Button>\r\n        )}\r\n      </div>\r\n    </div>,\r\n    document.getElementById('modal-root')\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from '../Modal/Modal';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport React, { useState, useContext, Fragment } from 'react';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\n\r\nexport default function SuccessHandler({ onAccept, successModal }) {\r\n  const activate = successModal.activate;\r\n\r\n  return (\r\n    <Fragment>\r\n      {activate && <Backdrop activate={activate}></Backdrop>}\r\n      {activate && (\r\n        <Modal\r\n          title={successModal.title}\r\n          onAccept={onAccept}\r\n          affirmative={successModal.affirmative}\r\n          activate={activate}\r\n        >\r\n          <p>{successModal.message}</p>\r\n        </Modal>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import SignInForm from '../../components/Form/Form';\r\nimport Layout from '../../components/Layout';\r\nimport Form from '../../components/Form/Form';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useState, useContext, useRef, useEffect } from 'react';\r\nimport ErrorHandler from '../../components/Error/ErrorHandler';\r\nimport SuccessHandler from '../../components/Success/SuccessHandler';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\n\r\nexport default function SignIn() {\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n  const [authenticationSuccess, setAuthenticationSuccess] = useState({});\r\n  let apiUrl = sessionStorage.getItem('apiUrl');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = async (userData) => {\r\n    const response = await fetch(`https://${apiUrl}/api/1.0/auth/sign-in`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n\r\n    const res = await response.json();\r\n\r\n    if (res.validationErrors) {\r\n      setErrorModal({\r\n        title: 'invalid user or password',\r\n        message: res.validationErrors.email,\r\n        activate: true,\r\n        affirmative: 'ok',\r\n      });\r\n    }\r\n\r\n    if (res.authenticationSuccess) {\r\n      setAuthenticationSuccess(() => {\r\n        return {\r\n          title: 'welcome back',\r\n          message: `stay a while, ${res.authenticationSuccess.firstName}`,\r\n          activate: true,\r\n          affirmative: 'home',\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAccept = () => {\r\n    setErrorModal({\r\n      title: '',\r\n      message: '',\r\n      activate: false,\r\n      affirmative: '',\r\n    });\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    setAuthenticationSuccess({\r\n      title: '',\r\n      message: '',\r\n      activate: false,\r\n      affirmative: '',\r\n    });\r\n\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <SuccessHandler\r\n        onAccept={handleRedirect}\r\n        successModal={authenticationSuccess}\r\n      />\r\n      <ErrorHandler onAccept={onAccept} />\r\n      <Form authType={`Sign In`} onSubmit={onSubmit}></Form>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport Form from '../../components/Form/Form';\r\nimport Layout from '../../components/Layout';\r\nimport ErrorHandler from '../../components/Error/ErrorHandler';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\n\r\nexport default function SignUp() {\r\n  const height = '175vh';\r\n  let apiUrl = sessionStorage.getItem('apiUrl');\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onRedirect = () => {\r\n    const signInPage = '/sign-in';\r\n    navigate(signInPage);\r\n  };\r\n\r\n  const onCancelRedirect = () => {\r\n    setErrorModal({\r\n      title: '',\r\n      message: '',\r\n      activate: false,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (userData) => {\r\n    setFormError(null);\r\n\r\n    const response = await fetch(`https://${apiUrl}/api/1.0/auth/sign-up`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    });\r\n\r\n    // if response.status >= 400\r\n\r\n    if (response.status !== 200 && response.status !== 300) {\r\n      const res = await response.json();\r\n      setFormError(res.validationErrors);\r\n    }\r\n\r\n    if (response.status === 300) {\r\n      const res = await response.json();\r\n      if (\r\n        res.validationErrors.email &&\r\n        res.validationErrors.email === 'this email exists'\r\n      ) {\r\n        setErrorModal({\r\n          title: res.validationErrors.email,\r\n          message: 'would you like to sign in?',\r\n          activate: true,\r\n          affirmative: 'yes',\r\n          negation: 'no',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout height={height}>\r\n      <ErrorHandler\r\n        onCancel={onCancelRedirect}\r\n        onAccept={onRedirect}\r\n      ></ErrorHandler>\r\n\r\n      <Form authType={`Sign Up`} onSubmit={onSubmit}></Form>\r\n    </Layout>\r\n  );\r\n}\r\n"],"names":["Backdrop","props","errorModal","setErrorModal","formError","setFormError","useError","activate","ReactDOM","_jsx","className","classes","onClick","title","message","document","getElementById","Error","_ref","error","children","ErrorHandler","onCancel","onAccept","_jsxs","Fragment","Modal","affirmative","negation","ControlColumn","FieldSet","errors","container","concat","control","htmlFor","id","name","value","type","acquisitionChannel","ControlRow","Form","authType","onSubmit","theme","themesCollection","toggleTheme","useTheme","emailInputRef","useRef","passwordInputRef","firstNameInputRef","lastNameInputRef","formClass","toLowerCase","replace","themeData","filterThemeData","formStyles","inputSpecs","parseThemeData","async","event","preventDefault","formData","FormData","target","payload","email","get","password","confirmPassword","firstName","lastName","role","getAll","buildFormDataPayload","form","welcome","Input","label","width","fontSize","inputRef","height","_Fragment","button","_objectWithoutProperties","_excluded","isFocused","setIsFocused","useState","styles","inputType","themeStyles","formFieldColor","formFieldActiveColor","formFocusBorderColor","textColor","formInputTextColor","inputStyle","backgroundColor","color","border","outline","display","borderRadius","position","marginBottom","marginLeft","labelColor","style","column","onFocus","onBlur","input","ref","TextAreaInput","_ref2","contentRef","_excluded2","textAreaStyle","minHeight","maxHeight","textArea","Button","SuccessHandler","successModal","SignIn","authenticationSuccess","setAuthenticationSuccess","apiUrl","sessionStorage","getItem","navigate","useNavigate","Layout","handleRedirect","response","fetch","method","body","JSON","stringify","userData","headers","res","json","validationErrors","SignUp","onCancelRedirect","onRedirect","status"],"sourceRoot":""}