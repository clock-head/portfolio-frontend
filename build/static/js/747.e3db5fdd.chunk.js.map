{"version":3,"file":"static/js/747.e3db5fdd.chunk.js","mappings":"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","sources":["webpack://react-temp/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","components/FlowControl/ControlColumn.jsx","webpack://react-temp/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","webpack://react-temp/./src/components/WriteArticle.module.css?dc71","components/WriteArticle.jsx","pages/Blog/NewArticle.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__MYx5b\"};","import React from 'react';\r\nimport classes from './Error.module.css';\r\n\r\nexport default function Error({ message }) {\r\n  return <p className={classes.error}>{message}</p>;\r\n}\r\n","import classes from './ControlColumn';\r\n\r\nexport default function ControlColumn({ children }) {\r\n  return <div className={classes['control-column']}>{children}</div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"space_racer\":\"Input_space_racer__E66z-\",\"control\":\"Input_control__TMUNv\",\"column\":\"Input_column__eb2ZE\"};","import React, { useContext, useState } from 'react';\r\nimport classes from './Input.module.css';\r\nimport { ThemeContext, useTheme } from '../../store/theme-context';\r\nimport { ErrorContext, useError } from '../../store/error-context';\r\nimport { filterThemeData, parseThemeData } from '../../util/theme';\r\nimport Error from '../Error/Error';\r\nimport Unit from '../FlowControl/Unit';\r\n\r\nexport const Input = ({ label, inputRef, name, ...props }) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [theme, themesCollection, toggleTheme] = useTheme();\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n  const themeData = filterThemeData(theme, themesCollection);\r\n  const styles = {};\r\n  const inputType =\r\n    label === 'email'\r\n      ? 'email'\r\n      : label === 'password' || label === 'confirm-password'\r\n      ? 'password'\r\n      : 'text';\r\n  const title = label.replace('-', ' ');\r\n\r\n  if (theme !== 'space_racer' && themeData) {\r\n    const themeStyles = parseThemeData(themeData, 'newArticle');\r\n    styles.formFieldColor = themeStyles.formFieldColor;\r\n    styles.formFieldActiveColor = themeStyles.formFieldActiveColor;\r\n    styles.formFocusBorderColor = themeStyles.formFocusBorderColor;\r\n    styles.textColor = themeStyles.formInputTextColor;\r\n  }\r\n\r\n  const inputStyle = {\r\n    backgroundColor: isFocused\r\n      ? styles.formFieldActiveColor\r\n      : styles.formFieldColor,\r\n    color: styles.textColor,\r\n    border: isFocused ? styles.formFocusBorderColor : '',\r\n    outline: 'none',\r\n    display: 'block',\r\n    height: props.height,\r\n    width: props.width,\r\n    borderRadius: '5px',\r\n    fontSize: props.fontSize,\r\n  };\r\n\r\n  const position = {\r\n    marginBottom: props.marginBottom,\r\n    marginLeft: props.marginLeft,\r\n  };\r\n\r\n  const labelStyle = {\r\n    color: props.labelColor,\r\n  };\r\n\r\n  const onFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={position}\r\n      className={`${classes.control} ${classes.column} ${classes.theme}`}\r\n    >\r\n      <label htmlFor={label}>{title}</label>\r\n      <input\r\n        style={inputStyle}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        type={inputType}\r\n        className={`${classes.input}`}\r\n        ref={inputRef}\r\n        name={name}\r\n      ></input>\r\n      {formError && formError[label] && (\r\n        <Error message={formError[label]}></Error>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextAreaInput = ({ contentRef, label, ...props }) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [theme, themesCollection, toggleTheme] = useTheme();\r\n  const [errorModal, setErrorModal, formError, setFormError] = useError();\r\n  const themeData = filterThemeData(theme, themesCollection);\r\n  const styles = {};\r\n  const inputType =\r\n    label === 'email'\r\n      ? 'email'\r\n      : label === 'password' || label === 'confirm-password'\r\n      ? 'password'\r\n      : 'text';\r\n  const title = label.replace('-', ' ');\r\n\r\n  if (theme !== 'space_racer' && themeData) {\r\n    const themeStyles = parseThemeData(themeData, 'newArticle');\r\n    styles.formFieldColor = themeStyles.formFieldColor;\r\n    styles.formFieldActiveColor = themeStyles.formFieldActiveColor;\r\n    styles.formFocusBorderColor = themeStyles.formFocusBorderColor;\r\n    styles.textColor = themeStyles.formInputTextColor;\r\n  }\r\n\r\n  const onFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const onBlur = () => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  const textAreaStyle = {\r\n    backgroundColor: isFocused\r\n      ? styles.formFieldActiveColor\r\n      : styles.formFieldColor,\r\n    border: isFocused ? styles.formFocusBorderColor : '',\r\n    color: styles.textColor,\r\n    outline: 'none',\r\n    display: 'block',\r\n    minHeight: '30vh',\r\n    maxHeight: '40vh',\r\n    width: '80%',\r\n    borderRadius: '5px',\r\n    fontSize: props.fontSize,\r\n  };\r\n\r\n  const position = {\r\n    marginLeft: props.marginLeft,\r\n  };\r\n\r\n  return (\r\n    <div style={position} className={`${classes.control} ${classes.column}`}>\r\n      <label htmlFor={label}>{label}</label>\r\n      <textarea\r\n        style={textAreaStyle}\r\n        className={classes.textArea}\r\n        onFocus={onFocus}\r\n        onBlur={onBlur}\r\n        ref={contentRef}\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"WriteArticle_form__wqQGz\",\"control\":\"WriteArticle_control__mv1+K\",\"content\":\"WriteArticle_content__C3-i-\",\"strawberry_oasis\":\"WriteArticle_strawberry_oasis__a6IbA\",\"fudge\":\"WriteArticle_fudge__TD-ff\",\"snow\":\"WriteArticle_snow__EJNFh\",\"title_input\":\"WriteArticle_title_input__SktQH\",\"content_input\":\"WriteArticle_content_input__925Lm\"};","import { useRef, useContext, useState, useEffect } from 'react';\r\nimport classes from './WriteArticle.module.css';\r\nimport Layout from './Layout';\r\nimport Button from './Button/Button';\r\nimport { ThemeContext, useTheme } from '../store/theme-context';\r\nimport { filterThemeData, parseThemeData } from '../util/theme';\r\nimport styled from 'styled-components';\r\nimport { Input, TextAreaInput } from './Input/Input';\r\nimport ControlColumn from './FlowControl/ControlColumn';\r\n\r\nfunction WriteArticle() {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [theme, themesCollection, toggleTheme] = useTheme();\r\n  let apiUrl = sessionStorage.getItem('apiUrl');\r\n\r\n  const title = useRef();\r\n  const content = useRef();\r\n\r\n  const themeData = filterThemeData(theme, themesCollection);\r\n  const styles = {};\r\n\r\n  if (theme !== 'space_racer' && themeData) {\r\n    const themeStyles = parseThemeData(themeData, 'newArticle');\r\n    styles.formFieldColor = themeStyles.formFieldColor;\r\n    styles.formFieldActiveColor = themeStyles.formFieldActiveColor;\r\n    styles.formFocusBorderColor = themeStyles.formFocusBorderColor;\r\n    styles.textColor = themeStyles.formInputTextColor;\r\n  }\r\n\r\n  async function onSubmitArticle(e) {\r\n    e.preventDefault();\r\n    const enteredTitle = title.current.value;\r\n    const enteredContent = content.current.value;\r\n\r\n    const response = await fetch(\r\n      `https://${apiUrl}/api/1.0/admin/submit-article`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          title: enteredTitle,\r\n          slug: enteredTitle.replaceAll(' ', '_').toLowerCase(),\r\n          content: enteredContent,\r\n        }),\r\n        mode: 'cors',\r\n      }\r\n    ).then((response) => response);\r\n\r\n    // success or failure modal for UX\r\n  }\r\n\r\n  return (\r\n    <div className={classes.body}>\r\n      <form className={classes.form} onSubmit={onSubmitArticle}>\r\n        <Button className=\"submit_button\" value=\"submit\">\r\n          Submit\r\n        </Button>\r\n\r\n        <ControlColumn>\r\n          <Input\r\n            label=\"title\"\r\n            labelColor=\"white\"\r\n            inputRef={title}\r\n            height=\"3rem\"\r\n            fontSize=\"1.5rem\"\r\n            marginBottom=\"1rem\"\r\n            marginLeft=\"8.5rem\"\r\n          ></Input>\r\n          <TextAreaInput\r\n            label=\"content\"\r\n            contentRef={content}\r\n            labelColor=\"white\"\r\n            marginLeft=\"8.5rem\"\r\n          ></TextAreaInput>\r\n        </ControlColumn>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WriteArticle;\r\n","import WriteArticle from '../../components/WriteArticle';\r\nimport Layout from '../../components/Layout';\r\n\r\nfunction NewArticle() {\r\n  return (\r\n    <Layout>\r\n      <WriteArticle></WriteArticle>;\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default NewArticle;\r\n"],"names":["Error","_ref","message","_jsx","className","classes","error","children","ControlColumn","Input","label","inputRef","name","props","_objectWithoutProperties","_excluded","isFocused","setIsFocused","useState","theme","themesCollection","toggleTheme","useTheme","errorModal","setErrorModal","formError","setFormError","useError","themeData","filterThemeData","styles","inputType","title","replace","themeStyles","parseThemeData","formFieldColor","formFieldActiveColor","formFocusBorderColor","textColor","formInputTextColor","inputStyle","backgroundColor","color","border","outline","display","height","width","borderRadius","fontSize","position","marginBottom","marginLeft","labelColor","_jsxs","style","concat","control","column","htmlFor","onFocus","onBlur","type","input","ref","TextAreaInput","_ref2","contentRef","_excluded2","textAreaStyle","minHeight","maxHeight","textArea","apiUrl","sessionStorage","getItem","useRef","content","body","form","onSubmit","async","e","preventDefault","enteredTitle","current","value","enteredContent","fetch","method","headers","JSON","stringify","slug","replaceAll","toLowerCase","mode","then","response","Button","Layout","WriteArticle"],"sourceRoot":""}